{
    "fid": "<class 'torchmetrics.image.fid.FID'>",
    "is": "<class 'torchmetrics.image.inception.IS'>",
    "kid": "<class 'torchmetrics.image.kid.KID'>",
    "lpips": "<class 'torchmetrics.image.lpip_similarity.LPIPS'>",
    "psnr": "<class 'torchmetrics.image.psnr.PSNR'>",
    "ssim": "<class 'torchmetrics.image.ssim.SSIM'>",
    "retrievalfallout": "<class 'torchmetrics.retrieval.retrieval_fallout.RetrievalFallOut'>",
    "retrievalhitrate": "<class 'torchmetrics.retrieval.retrieval_hit_rate.RetrievalHitRate'>",
    "retrievalmap": "<class 'torchmetrics.retrieval.mean_average_precision.RetrievalMAP'>",
    "retrievalmrr": "<class 'torchmetrics.retrieval.mean_reciprocal_rank.RetrievalMRR'>",
    "retrievalmetric": "<class 'torchmetrics.retrieval.retrieval_metric.RetrievalMetric'>",
    "retrievalnormalizeddcg": "<class 'torchmetrics.retrieval.retrieval_ndcg.RetrievalNormalizedDCG'>",
    "retrievalprecision": "<class 'torchmetrics.retrieval.retrieval_precision.RetrievalPrecision'>",
    "retrievalrprecision": "<class 'torchmetrics.retrieval.retrieval_r_precision.RetrievalRPrecision'>",
    "retrievalrecall": "<class 'torchmetrics.retrieval.retrieval_recall.RetrievalRecall'>",
    "cosinesimilarity": "<class 'torchmetrics.regression.cosine_similarity.CosineSimilarity'>",
    "explainedvariance": "<class 'torchmetrics.regression.explained_variance.ExplainedVariance'>",
    "meanabsoluteerror": "<class 'torchmetrics.regression.mean_absolute_error.MeanAbsoluteError'>",
    "meanabsolutepercentageerror": "<class 'torchmetrics.regression.mean_absolute_percentage_error.MeanAbsolutePercentageError'>",
    "meansquarederror": "<class 'torchmetrics.regression.mean_squared_error.MeanSquaredError'>",
    "meansquaredlogerror": "<class 'torchmetrics.regression.mean_squared_log_error.MeanSquaredLogError'>",
    "pearsoncorrcoef": "<class 'torchmetrics.regression.pearson.PearsonCorrcoef'>",
    "r2score": "<class 'torchmetrics.regression.r2.R2Score'>",
    "spearmancorrcoef": "<class 'torchmetrics.regression.spearman.SpearmanCorrcoef'>",
    "symmetricmeanabsolutepercentageerror": "<class 'torchmetrics.regression.symmetric_mean_absolute_percentage_error.SymmetricMeanAbsolutePercentageError'>",
    "tweediedeviancescore": "<class 'torchmetrics.regression.tweedie_deviance.TweedieDevianceScore'>",
    "auc": "<class 'torchmetrics.classification.auc.AUC'>",
    "auroc": "<class 'torchmetrics.classification.auroc.AUROC'>",
    "accuracy": "<class 'torchmetrics.classification.accuracy.Accuracy'>",
    "averageprecision": "<class 'torchmetrics.classification.avg_precision.AveragePrecision'>",
    "binnedaverageprecision": "<class 'torchmetrics.classification.binned_precision_recall.BinnedAveragePrecision'>",
    "binnedprecisionrecallcurve": "<class 'torchmetrics.classification.binned_precision_recall.BinnedPrecisionRecallCurve'>",
    "binnedrecallatfixedprecision": "<class 'torchmetrics.classification.binned_precision_recall.BinnedRecallAtFixedPrecision'>",
    "calibrationerror": "<class 'torchmetrics.classification.calibration_error.CalibrationError'>",
    "cohenkappa": "<class 'torchmetrics.classification.cohen_kappa.CohenKappa'>",
    "confusionmatrix": "<class 'torchmetrics.classification.confusion_matrix.ConfusionMatrix'>",
    "f1": "<class 'torchmetrics.classification.f_beta.F1'>",
    "fbeta": "<class 'torchmetrics.classification.f_beta.FBeta'>",
    "hammingdistance": "<class 'torchmetrics.classification.hamming_distance.HammingDistance'>",
    "hinge": "<class 'torchmetrics.classification.hinge.Hinge'>",
    "iou": "<class 'torchmetrics.classification.iou.IoU'>",
    "kldivergence": "<class 'torchmetrics.classification.kl_divergence.KLDivergence'>",
    "matthewscorrcoef": "<class 'torchmetrics.classification.matthews_corrcoef.MatthewsCorrcoef'>",
    "precision": "<class 'torchmetrics.classification.precision_recall.Precision'>",
    "precisionrecallcurve": "<class 'torchmetrics.classification.precision_recall_curve.PrecisionRecallCurve'>",
    "roc": "<class 'torchmetrics.classification.roc.ROC'>",
    "recall": "<class 'torchmetrics.classification.precision_recall.Recall'>",
    "specificity": "<class 'torchmetrics.classification.specificity.Specificity'>",
    "statscores": "<class 'torchmetrics.classification.stat_scores.StatScores'>"
}